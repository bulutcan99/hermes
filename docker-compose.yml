version: "3.8"

services:
  # PostgreSQL with PostGIS extension
  postgres:
    image: postgis/postgis:16-3.4
    container_name: hermes-postgres
    environment:
      POSTGRES_USER: hermes
      POSTGRES_PASSWORD: hermes_dev
      POSTGRES_DB: hermes
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hermes"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - hermes-network

  # Redis for caching and real-time state
  redis:
    image: redis:7-alpine
    container_name: hermes-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - hermes-network

  # NATS for event streaming
  nats:
    image: nats:2.10-alpine
    container_name: hermes-nats
    ports:
      - "4222:4222" # Client connections
      - "8222:8222" # HTTP monitoring
      - "6222:6222" # Cluster connections
    command:
      - "-js" # Enable JetStream
      - "-m" # Enable monitoring
      - "8222" # Monitoring port
      - "--store_dir=/data" # Persistence directory
      - "--max_memory_store=1GB" # Max memory for streams
      - "--max_file_store=10GB" # Max file storage
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - hermes-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: hermes-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - hermes-network
    depends_on:
      - postgres
      - redis
      - nats

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: hermes-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - hermes-network
    depends_on:
      - prometheus

networks:
  hermes-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  nats_data:
  prometheus_data:
  grafana_data:
